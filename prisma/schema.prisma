// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id
  firstName String @map("first_name")
  lastName String @map("last_name")
  document String?
  email String @unique

  Accounts UserAccount[]
  Categories Category[]
  OwnedAccount Account[]
  Transactions Transaction[]

  @@map("users")
}

model Account {
  id String @id @default(cuid())
  name String
  ownerId String @map("owner_id")
  balance Float @default(0)
  initialBalance Int @default(0) @map("initial_balance")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  owner User @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  Transactions Transaction[]
  Accounts UserAccount[]

  @@map("accounts")
}

model UserAccount {
  userId String @map("user_id")
  accountId String @map("account_id")
  role UserRole @default(USER)
  canCreate Boolean @default(true) @map("can_create")
  canEdit Boolean @default(false) @map("can_edit")
  acceptedUser Boolean @default(false) @map("accepted_user")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@map("user_accounts")
  @@id([userId, accountId])
}

enum UserRole {
  OWNER
  USER
}

enum CATEGORY_TYPE {
  INCOME
  EXPENSE
  INVESTMENT
}

model Category {
  id String @id @default(cuid())
  userId String @map("user_id")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  type CATEGORY_TYPE
  name String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Transactions Transaction[]

  @@map("categories")
}

enum PAYMENT_METHOD {
  CARTAO_CREDITO
  CARTAO_DEBITO
  PIX
  DINHEIRO
  TRANSFERENCIA
  BOLETO
  DEBITO_CONTA
}

model Transaction {
  id String @id @default(cuid())
  accountId String @map("account_id")
  paymentMethod PAYMENT_METHOD? @map("payment_method")
  categoryId String? @map("category_id")
  creatorId String @map("creator_id")
  payee String
  amount Int
  type TRANSACTION_TYPE
  date DateTime
  description String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  creator User @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  @@map("transactions")
}

enum TRANSACTION_TYPE {
  EXPENSE
  INCOME
  INVESTMENT
}